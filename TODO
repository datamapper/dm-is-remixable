FIXME
====
Add ability to have a unique relationship when joining through remixable
  This is stubbed at remixable.rb @~ line 223; waiting on stategic eager loading
  M:M Video.remix n, :commentables, :as => "comments", :for => "User", :unique => false
  M:M Article.remix n, :views, :for => "User", :unique => true
    in the generated table article_views article_id and user_id would be a unique key,
      only counting a users viewing of an article once

TODO
====
- Add ability to set primary keys and indexes when remixing

- Test nested remixing User remixes Photogenic; Photogenic Remixes comments
- Test double+ remixing. User remixes Commentable; enhance Commentable remix Commentable

- Harvest Class methods (including it into Remixed Model gets the instance methods, but not class methods...)

- Squash protection;
  IF    ClassA => remix ModuleB, :table_name => "squashme"
  AND   ClassC => remix ModuleB, :table_name => "squashme" #SQUASHED THAT TABLE

- Remixable.related(*remixed_models)
  Taggable.related(Article, JobPostings)


CONSIDERATIONS
==============
- Customizing Assocations           (http://datamapper.org/docs/associations.html)
- Adding Conditions to Associations (http://datamapper.org/docs/associations.html)
